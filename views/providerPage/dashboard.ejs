<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= title %> - TrackSmart</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet"
    />
    <link href="/css/style.css" rel="stylesheet" />
    <style>
      body {
        background-color: #f8f9fa;
      }
      .navbar {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }
      .navbar-brand {
        font-weight: bold;
        font-size: 1.5rem;
      }
      .main-content {
        padding: 2rem 0;
      }
      .stats-card {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        border: none;
        transition: transform 0.3s ease;
      }
      .stats-card:hover {
        transform: translateY(-5px);
      }
      .stats-icon {
        font-size: 2.5rem;
        margin-bottom: 1rem;
      }
      .provider-info {
        background: white;
        border-radius: 15px;
        padding: 2rem;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
      }
      .status-badge {
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
        border-radius: 20px;
      }
      .verified {
        background-color: #d4edda;
        color: #155724;
      }
      .pending {
        background-color: #fff3cd;
        color: #856404;
      }
      .rejected {
        background-color: #f8d7da;
        color: #721c24;
      }
    </style>
  </head>
  <body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark">
      <div class="container">
        <a class="navbar-brand" href="/dashboard">
          <i class="fas fa-truck me-2"></i>TrackSmart
        </a>

        <div class="navbar-nav ms-auto">
          <div class="nav-item dropdown">
            <a
              class="nav-link dropdown-toggle"
              href="#"
              role="button"
              data-bs-toggle="dropdown"
            >
              <i class="fas fa-user me-1"></i><%= provider.name %>
            </a>
            <ul class="dropdown-menu">
              <li>
                <a class="dropdown-item" href="#profile"
                  ><i class="fas fa-user-edit me-2"></i>Profile</a
                >
              </li>
              <li><hr class="dropdown-divider" /></li>
              <li>
                <a class="dropdown-item" href="#" onclick="logoutProvider()"
                  ><i class="fas fa-sign-out-alt me-2"></i>Logout</a
                >
              </li>
            </ul>
          </div>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <div class="container main-content">
      <!-- Welcome Section -->
      <div class="row mb-4">
        <div class="col-12">
          <h2 class="mb-3">Welcome, <%= provider.name %>!</h2>
          <p class="text-muted">
            Manage your logistics operations from your dashboard
          </p>
        </div>
      </div>

      <!-- Provider Info Card -->
      <div class="row mb-4">
        <div class="col-md-8">
          <div class="provider-info">
            <h4 class="mb-3">
              <i class="fas fa-building me-2"></i>Provider Information
            </h4>
            <div class="row">
              <div class="col-md-6">
                <p><strong>Provider ID:</strong> <%= provider.bppId %></p>
                <p><strong>Email:</strong> <%= provider.email %></p>
                <p><strong>Username:</strong> <%= provider.username %></p>
              </div>
              <div class="col-md-6">
                <p>
                  <strong>Status:</strong>
                  <% if (provider.isVerified) { %>
                  <span class="status-badge verified">
                    <i class="fas fa-check-circle me-1"></i>Verified
                  </span>
                  <% } else { %>
                  <span class="status-badge pending">
                    <i class="fas fa-clock me-1"></i>Pending
                  </span>
                  <% } %>
                </p>
                <p>
                  <strong>Member Since:</strong> <%= new
                  Date(provider.createdAt).toLocaleDateString() %>
                </p>
                <% if (provider.verifiedAt) { %>
                <p>
                  <strong>Verified On:</strong> <%= new
                  Date(provider.verifiedAt).toLocaleDateString() %>
                </p>
                <% } %>
              </div>
            </div>

            <% if (provider.hasBaseUri && provider.baseUri) { %>
            <div class="mt-3">
              <p>
                <strong>Base URI:</strong> <code><%= provider.baseUri %></code>
              </p>
            </div>
            <% } %> <% if (provider.actions && provider.actions.length > 0) { %>
            <div class="mt-3">
              <p><strong>Supported Actions:</strong></p>
              <div>
                <% provider.actions.forEach(action => { %>
                <span class="badge bg-primary me-2"><%= action %></span>
                <% }); %>
              </div>
            </div>
            <% } %> <% if (provider.supportedPincodes &&
            provider.supportedPincodes.length > 0) { %>
            <div class="mt-3">
              <p><strong>Supported Pincodes:</strong></p>
              <div>
                <% provider.supportedPincodes.slice(0, 10).forEach(pincode => {
                %>
                <span class="badge bg-secondary me-2"><%= pincode %></span>
                <% }); %> <% if (provider.supportedPincodes.length > 10) { %>
                <span class="text-muted"
                  >... and <%= provider.supportedPincodes.length - 10 %>
                  more</span
                >
                <% } %>
              </div>
            </div>
            <% } %>
          </div>
        </div>

        <div class="col-md-4">
          <!-- Quick Stats -->
          <div class="stats-card text-center mb-3">
            <i class="fas fa-shipping-fast stats-icon text-primary"></i>
            <h5>Quick Actions</h5>
            <div class="d-grid gap-2">
              <button
                class="btn btn-outline-primary"
                onclick="alert('Feature coming soon!')"
              >
                <i class="fas fa-plus me-2"></i>New Shipment
              </button>
              <button
                class="btn btn-outline-success"
                onclick="alert('Feature coming soon!')"
              >
                <i class="fas fa-search me-2"></i>Track Orders
              </button>
            </div>
          </div>

          <!-- Limits Info -->
          <div class="stats-card">
            <h6 class="mb-3">
              <i class="fas fa-info-circle me-2"></i>Service Limits
            </h6>
            <% if (provider.weightLimits) { %>
            <p class="mb-2">
              <strong>Weight:</strong> <%= provider.weightLimits.min %>kg - <%=
              provider.weightLimits.max %>kg
            </p>
            <% } %> <% if (provider.dimensionalLimits) { %>
            <p class="mb-0">
              <strong>Dimensions:</strong> <%= provider.dimensionalLimits.l %> x
              <%= provider.dimensionalLimits.w %> x <%=
              provider.dimensionalLimits.h %> cm
            </p>
            <% } %>
          </div>
        </div>
      </div>

      <!-- Statistics Cards -->
      <% if (typeof stats !== 'undefined') { %>
      <div class="row mb-4">
        <div class="col-md-3">
          <div class="stats-card text-center">
            <i class="fas fa-inbox stats-icon text-info"></i>
            <h4 class="mb-0"><%= stats.totalRequests %></h4>
            <p class="text-muted mb-0">Total Requests</p>
          </div>
        </div>
        <div class="col-md-3">
          <div class="stats-card text-center">
            <i class="fas fa-clock stats-icon text-warning"></i>
            <h4 class="mb-0"><%= stats.pendingRequests %></h4>
            <p class="text-muted mb-0">Pending</p>
          </div>
        </div>
        <div class="col-md-3">
          <div class="stats-card text-center">
            <i class="fas fa-check-circle stats-icon text-success"></i>
            <h4 class="mb-0"><%= stats.acceptedRequests %></h4>
            <p class="text-muted mb-0">Accepted</p>
          </div>
        </div>
        <div class="col-md-3">
          <div class="stats-card text-center">
            <i class="fas fa-rupee-sign stats-icon text-primary"></i>
            <h4 class="mb-0">
              â‚¹<%= (stats.totalRevenue || 0).toLocaleString() %>
            </h4>
            <p class="text-muted mb-0">Total Revenue</p>
          </div>
        </div>
      </div>
      <% } %>

      <!-- Shipment Requests -->
      <div class="row">
        <div class="col-12">
          <div class="provider-info">
            <div class="d-flex justify-content-between align-items-center mb-3">
              <h4 class="mb-0">
                <i class="fas fa-shipping-fast me-2"></i>Shipment Requests <% if
                (typeof pendingRequests !== 'undefined' &&
                pendingRequests.length > 0) { %>
                <span class="badge bg-warning ms-2"
                  ><%= pendingRequests.length %> Pending</span
                >
                <% } %>
              </h4>
              <button
                class="btn btn-outline-primary btn-sm"
                onclick="location.reload()"
              >
                <i class="fas fa-refresh me-1"></i>Refresh
              </button>
            </div>

            <% if (typeof requests !== 'undefined' && requests.length > 0) { %>
            <div class="table-responsive">
              <table class="table table-hover">
                <thead class="table-light">
                  <tr>
                    <th>Request ID</th>
                    <th>Route</th>
                    <th>Weight</th>
                    <th>Requested Cost</th>
                    <th>Status</th>
                    <th>Created</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% requests.slice(0, 10).forEach(request => { %>
                  <tr>
                    <td>
                      <code><%= request._id.toString().slice(-8) %></code>
                    </td>
                    <td>
                      <small class="text-muted">
                        <%= request.shipmentId.sender.pincode %>
                        <i class="fas fa-arrow-right mx-1"></i>
                        <%= request.shipmentId.receiver.pincode %>
                      </small>
                      <br />
                      <span
                        ><%= request.shipmentId.sender.name %> â†’ <%=
                        request.shipmentId.receiver.name %></span
                      >
                    </td>
                    <td><%= request.shipmentId.weight %>kg</td>
                    <td>
                      â‚¹<%= (request.quoteId?.estimatedCost ||
                      request.requestedCost || 0).toLocaleString() %>
                    </td>
                    <td>
                      <% if (request.status === 'pending') { %>
                      <span class="badge bg-warning">Pending</span>
                      <% } else if (request.status === 'accepted') { %>
                      <span class="badge bg-success">Accepted</span>
                      <% } else if (request.status === 'rejected') { %>
                      <span class="badge bg-danger">Rejected</span>
                      <% } %>
                    </td>
                    <td>
                      <small
                        ><%= new Date(request.createdAt).toLocaleDateString()
                        %></small
                      >
                    </td>
                    <td>
                      <% if (request.status === 'pending') { %>
                      <button
                        class="btn btn-success btn-sm me-1"
                        onclick="handleRequest('<%= request._id %>', 'accept')"
                      >
                        <i class="fas fa-check"></i>
                      </button>
                      <button
                        class="btn btn-danger btn-sm"
                        onclick="handleRequest('<%= request._id %>', 'reject')"
                      >
                        <i class="fas fa-times"></i>
                      </button>
                      <% } else if (request.status === 'accepted') { %>
                      <button
                        class="btn btn-info btn-sm me-1"
                        onclick="updateShipmentStatus('<%= request._id %>')"
                        title="Update Status"
                      >
                        <i class="fas fa-edit"></i>
                      </button>
                      <button
                        class="btn btn-outline-secondary btn-sm"
                        onclick="viewRequestDetails('<%= request._id %>')"
                      >
                        <i class="fas fa-eye"></i>
                      </button>
                      <% } else { %>
                      <button
                        class="btn btn-info btn-sm"
                        onclick="viewRequestDetails('<%= request._id %>')"
                      >
                        <i class="fas fa-eye"></i>
                      </button>
                      <% } %>
                    </td>
                  </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>

            <% if (requests.length > 10) { %>
            <div class="text-center mt-3">
              <p class="text-muted">
                Showing 10 of <%= requests.length %> requests
              </p>
              <button
                class="btn btn-outline-primary"
                onclick="alert('Pagination coming soon!')"
              >
                View All Requests
              </button>
            </div>
            <% } %> <% } else { %>
            <div class="text-center py-4">
              <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
              <p class="text-muted">No shipment requests received yet</p>
              <small class="text-muted">
                Shipment requests from sellers will appear here when they select
                your services
              </small>
            </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      let currentRequestId = null;
      let currentAction = null;

      // Wait for DOM to be ready
      document.addEventListener('DOMContentLoaded', function() {
        setupModalEventListeners();
      });

      // Set up modal event listeners
      function setupModalEventListeners() {
        // Confirm accept request
        const confirmAcceptBtn = document.getElementById('confirmAccept');
        if (confirmAcceptBtn) {
          confirmAcceptBtn.addEventListener('click', async function() {
            const actualCost = document.getElementById('actualCost').value;

            if (!actualCost || parseFloat(actualCost) <= 0) {
              alert('Please enter a valid cost amount');
              return;
            }

            await processRequest('accept', { actualCost: parseFloat(actualCost) });
          });
        }

        // Confirm reject request
        const confirmRejectBtn = document.getElementById('confirmReject');
        if (confirmRejectBtn) {
          confirmRejectBtn.addEventListener('click', async function() {
            const rejectionReason = document.getElementById('rejectionReason').value.trim();

            if (!rejectionReason) {
              alert('Please provide a reason for rejection');
              return;
            }

            await processRequest('reject', { rejectionReason });
          });
        }
      }

      // Handle request acceptance/rejection
      async function handleRequest(requestId, action) {
        currentRequestId = requestId;
        currentAction = action;

        // Try modal approach first, fallback to simple prompts
        try {
          if (action === 'accept') {
            const acceptModalElement = document.getElementById('acceptModal');
            if (acceptModalElement) {
              const modal = new bootstrap.Modal(acceptModalElement);
              modal.show();
            } else {
              throw new Error('Accept modal not found');
            }
          } else if (action === 'reject') {
            const rejectModalElement = document.getElementById('rejectModal');
            if (rejectModalElement) {
              const modal = new bootstrap.Modal(rejectModalElement);
              modal.show();
            } else {
              throw new Error('Reject modal not found');
            }
          }
        } catch (error) {
          console.error('Modal error, using fallback approach:', error);

          // Fallback: Use simple prompts
          if (action === 'accept') {
            const actualCost = prompt('Enter actual cost for this shipment (â‚¹):');
            if (actualCost && !isNaN(actualCost) && parseFloat(actualCost) > 0) {
              await processRequest('accept', { actualCost: parseFloat(actualCost) });
            } else if (actualCost !== null) {
              alert('Please enter a valid cost amount');
            }
          } else if (action === 'reject') {
            const rejectionReason = prompt('Enter reason for rejection:');
            if (rejectionReason && rejectionReason.trim()) {
              await processRequest('reject', { rejectionReason: rejectionReason.trim() });
            } else if (rejectionReason !== null) {
              alert('Please provide a reason for rejection');
            }
          }
        }
      }

      // Process the request
      async function processRequest(action, data) {
        try {
          // Show loading state
          const confirmBtn = action === 'accept' ?
            document.getElementById('confirmAccept') :
            document.getElementById('confirmReject');

          if (confirmBtn) {
            confirmBtn.disabled = true;
            confirmBtn.innerHTML = `<i class="fas fa-spinner fa-spin me-2"></i>Processing...`;
          }

          const response = await fetch(`/api/providers/requests/${currentRequestId}/${action}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          });

          const result = await response.json();

          if (response.ok && result.success) {
            // Close modal if it exists
            try {
              const modalElement = action === 'accept' ?
                document.getElementById('acceptModal') :
                document.getElementById('rejectModal');
              const modal = bootstrap.Modal.getInstance(modalElement);
              if (modal) {
                modal.hide();
              }
            } catch (modalError) {
              // Ignore modal close errors
            }

            // Clear form inputs
            if (action === 'accept') {
              const costInput = document.getElementById('actualCost');
              if (costInput) costInput.value = '';
            } else {
              const reasonInput = document.getElementById('rejectionReason');
              if (reasonInput) reasonInput.value = '';
            }

            alert(`Request ${action}ed successfully!`);
            location.reload();
          } else {
            const errorMessage = result.message || `Failed to ${action} request`;
            alert(`Error: ${errorMessage}`);
          }
        } catch (error) {
          console.error(`Error processing ${action} request:`, error);
          alert(`Network error: Unable to ${action} request. Please try again.`);
        } finally {
          // Reset button state
          const confirmBtn = action === 'accept' ?
            document.getElementById('confirmAccept') :
            document.getElementById('confirmReject');

          if (confirmBtn) {
            confirmBtn.disabled = false;
            if (action === 'accept') {
              confirmBtn.innerHTML = `Accept Request`;
            } else {
              confirmBtn.innerHTML = `Reject Request`;
            }
          }
        }
      }
            } else {
              confirmBtn.innerHTML = `Reject Request`;
            }
          }
        }
      }

      // View request details
      function viewRequestDetails(requestId) {
        // For now, just show an alert. In future, this could open a modal with full details
        alert(`Request details for ${requestId} - Feature coming soon!`);
      }

      // Logout function
      async function logoutProvider() {
        if (confirm('Are you sure you want to logout?')) {
          try {
            const response = await fetch('/api/providers/logout', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              credentials: 'same-origin' // Include session cookies
            });

            const result = await response.json();

            if (response.ok && result.success) {
              // Clear any local storage or session storage if used
              if (localStorage) {
                localStorage.clear();
              }
              if (sessionStorage) {
                sessionStorage.clear();
              }

              window.location.href = '/main-login';
            } else {
              console.error('Logout failed:', result.message);
              alert('Error logging out: ' + (result.message || 'Please try again.'));
            }
          } catch (error) {
            console.error('Logout error:', error);
            alert('Network error during logout. Please try again.');
          }
        }
      }

      // Make functions global for onclick handlers
      window.logoutProvider = logoutProvider;
      window.handleRequest = handleRequest;
      window.viewRequestDetails = viewRequestDetails;

      // Status Update functionality
      let currentUpdateRequestId = null;

      // Show status update modal
      window.updateShipmentStatus = function(requestId) {
        currentUpdateRequestId = requestId;
        const modal = new bootstrap.Modal(document.getElementById('statusUpdateModal'));
        modal.show();
      };

      // Handle status update confirmation
      document.getElementById('confirmStatusUpdate').addEventListener('click', async function() {
        const status = document.getElementById('shipmentStatus').value;
        const trackingNumber = document.getElementById('trackingNumber').value.trim();
        const notes = document.getElementById('statusNotes').value.trim();

        if (!status) {
          alert('Please select a status');
          return;
        }

        try {
          const response = await fetch(`/api/providers/requests/${currentUpdateRequestId}/update-status`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              status: status,
              trackingNumber: trackingNumber || null,
              notes: notes || null
            })
          });

          const result = await response.json();

          if (result.success) {
            // Close modal
            const modal = bootstrap.Modal.getInstance(document.getElementById('statusUpdateModal'));
            modal.hide();

            // Clear form
            document.getElementById('shipmentStatus').value = '';
            document.getElementById('trackingNumber').value = '';
            document.getElementById('statusNotes').value = '';

            alert('Status updated successfully!');
            location.reload();
          } else {
            alert(`Error: ${result.message}`);
          }
        } catch (error) {
          console.error('Error updating status:', error);
          alert('Error updating status. Please try again.');
        }
      });

      // Auto-refresh every 30 seconds for pending requests
      <% if (typeof pendingRequests !== 'undefined' && pendingRequests.length > 0) { %>
      setTimeout(() => {
        location.reload();
      }, 30000);
      <% } %>
    </script>

    <!-- Accept Request Modal -->
    <div
      class="modal fade"
      id="acceptModal"
      tabindex="-1"
      aria-labelledby="acceptModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="acceptModalLabel">
              Accept Shipment Request
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <p>Please enter the actual cost for this shipment:</p>
            <div class="mb-3">
              <label for="actualCost" class="form-label">Actual Cost (â‚¹)</label>
              <input
                type="number"
                class="form-control"
                id="actualCost"
                placeholder="Enter amount"
                min="0"
                step="0.01"
                required
              />
              <div class="form-text">
                This will be the final cost charged to the customer.
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Cancel
            </button>
            <button type="button" class="btn btn-success" id="confirmAccept">
              Accept Request
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Reject Request Modal -->
    <div
      class="modal fade"
      id="rejectModal"
      tabindex="-1"
      aria-labelledby="rejectModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="rejectModalLabel">
              Reject Shipment Request
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <p>Please provide a reason for rejecting this shipment request:</p>
            <div class="mb-3">
              <label for="rejectionReason" class="form-label"
                >Rejection Reason</label
              >
              <textarea
                class="form-control"
                id="rejectionReason"
                rows="3"
                placeholder="Enter reason for rejection"
                required
              ></textarea>
              <div class="form-text">
                This will be communicated to the seller.
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Cancel
            </button>
            <button type="button" class="btn btn-danger" id="confirmReject">
              Reject Request
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Status Update Modal -->
    <div
      class="modal fade"
      id="statusUpdateModal"
      tabindex="-1"
      aria-labelledby="statusUpdateModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="statusUpdateModalLabel">
              Update Shipment Status
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <div class="mb-3">
              <label for="shipmentStatus" class="form-label"
                >Shipment Status</label
              >
              <select class="form-select" id="shipmentStatus" required>
                <option value="">Select Status</option>
                <option value="picked_up">Picked Up</option>
                <option value="in_transit">In Transit</option>
                <option value="out_for_delivery">Out for Delivery</option>
                <option value="delivered">Delivered</option>
                <option value="failed_delivery">Failed Delivery</option>
                <option value="returned">Returned</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="trackingNumber" class="form-label"
                >Tracking Number (Optional)</label
              >
              <input
                type="text"
                class="form-control"
                id="trackingNumber"
                placeholder="Enter tracking number"
              />
              <div class="form-text">
                Provide tracking number for customer reference.
              </div>
            </div>
            <div class="mb-3">
              <label for="statusNotes" class="form-label"
                >Notes (Optional)</label
              >
              <textarea
                class="form-control"
                id="statusNotes"
                rows="3"
                placeholder="Additional notes about status update..."
              ></textarea>
            </div>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Cancel
            </button>
            <button
              type="button"
              class="btn btn-primary"
              id="confirmStatusUpdate"
            >
              Update Status
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>
